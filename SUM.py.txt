#!/usr/bin/env python
# coding: utf-8

# Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

# You may assume that each input would have **exactly one solution**, and you may not use the same element twice.

# You can return the answer in any order.

# **Example 1:**

# * Input: nums = [2,7,11,15], target = 9
# * Output: [0,1]
# * Explanation: Because nums [0] + nums [1] == 9
# * we return [0, 11].

# **Example 2:**

# * Input: nums =［3,2,4］，target = 6
# * Output: [1, 2]

# **Example 3:**

# * Input: nums = [3,3], target = 6
# * Output: [0,1]

# In[1]:


class Solution:
    def twoSum(self, nums, target):
        seen = {}
        i = 0
        while i < len(nums):
            num = nums[i]
            complement = target - num
            if complement in seen:
                return [i, seen[complement]]
            seen[num] = i
            i += 1
    

n = int(input('Enter a Number: '))
nums = []
for i in range(0, n):
    element = int(input())
    nums.append(element)
print(nums)

target = int(input('Enter a target: '))

obj1 = Solution()
obj1.twoSum(nums, target)

